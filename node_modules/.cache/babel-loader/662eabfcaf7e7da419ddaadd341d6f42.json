{"remainingRequest":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/babel-loader/lib/index.js!/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/satyadarshin/Documents/www/development/rocket-science/client/src/components/AuthorTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/src/components/AuthorTable.vue","mtime":1599391436725},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZXZlcnkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4iOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBQYWdpbmF0aW9uU3dpdGNoZXIgZnJvbSAnQC9jb21wb25lbnRzL1BhZ2luYXRpb25Td2l0Y2hlcic7CmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VhcmNoOiAnJywKICAgICAgLy9mb3IgdGFibGUgc2VhcmNoCiAgICAgIHNlYXJjaGVkOiBbXSwKICAgICAgLy9mb3IgdGFibGUgc2VhcmNoCiAgICAgIHNvcnRLZXk6ICduYW1lJywKICAgICAgc29ydERpcmVjdGlvbjogJ2FzYycsCiAgICAgIGNvbHVtbnM6IFsnbmFtZScsICdib3JuJywgJ2RpZWQnXSwKICAgICAgdGhlRGF0ZTogJycsCiAgICAgIHBhZ2VTaXplOiAxMCwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIGNvdW50OiAxCiAgICB9OwogIH0sCiAgcHJvcHM6IHsKICAgIGF1dGhvckxpc3Q6IEFycmF5CiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBhcHBQYWdpbmF0aW9uU3dpdGNoZXI6IFBhZ2luYXRpb25Td2l0Y2hlcgogIH0sCiAgbWV0aG9kczogewogICAgc29ydEJ5OiBmdW5jdGlvbiBzb3J0Qnkoc29ydENyaXRlcmlhKSB7CiAgICAgIGlmIChzb3J0Q3JpdGVyaWEgPT09IHRoaXMuc29ydEtleSkgewogICAgICAgIHRoaXMuc29ydERpcmVjdGlvbiA9IHRoaXMuc29ydERpcmVjdGlvbiA9PT0gJ2FzYycgPyAnZGVzYycgOiAnYXNjJzsKICAgICAgfQoKICAgICAgdGhpcy5zb3J0S2V5ID0gc29ydENyaXRlcmlhOwogICAgfSwKICAgIGxhc3RGaXJzdExhc3ROYW1lVVJMOiBmdW5jdGlvbiBsYXN0Rmlyc3RMYXN0TmFtZVVSTChsYXN0Rmlyc3ROYW1lKSB7CiAgICAgIC8vTWFrZSBhbiBTRU8gZnJpZW5kbHkgVVJMLgogICAgICAvL1JldmVyc2UgdG8gZmlyc3Qtc3VybmFtZSBvcmRlciwgYW5kIHJlcGxhY2Ugc3BhY2UgYW5kIGNvbW1hcyB3aXRoIHVuZGVyc2NvcmVzIHRvIGJlIHByb3Blcmx5IGZvcm1hdHRlZCBVUkxzCiAgICAgIHZhciBmaXJzdExhc3ROYW1lID0gIiI7CiAgICAgIHJldHVybiBmaXJzdExhc3ROYW1lID0gbGFzdEZpcnN0TmFtZS5zcGxpdCgiLCAiKS5yZXZlcnNlKCkuam9pbigiICIpLnJlcGxhY2UoL1sgLF0vZywgIl8iKTsKICAgIH0sCiAgICBwYWdlU3dpdGNoZXI6IGZ1bmN0aW9uIHBhZ2VTd2l0Y2hlcigpIHsKICAgICAgdmFyIHRvdGFsUGFnZVNldCA9IHRoaXMucGFnZUNvdW50OwogICAgfSwKICAgIHRyYXZlcnNlUGFnaW5hdGlvbjogZnVuY3Rpb24gdHJhdmVyc2VQYWdpbmF0aW9uKHRyYXZlcnNlKSB7CiAgICAgIHRoaXMuY3VycmVudFBhZ2UgPSB0cmF2ZXJzZTsKICAgIH0KICB9LAogIGZpbHRlcnM6IHsKICAgIGRhdGVGb3JtYXQ6IGZ1bmN0aW9uIGRhdGVGb3JtYXQoYm9ybkRpZWQpIHsKICAgICAgaWYgKGJvcm5EaWVkID09PSAnJykgcmV0dXJuOwogICAgICB2YXIgbW9udGhzID0gewogICAgICAgICIwMSI6ICJKYW51YXJ5IiwKICAgICAgICAiMDIiOiAiRmVicnVhcnkiLAogICAgICAgICIwMyI6ICJNYXJjaCIsCiAgICAgICAgIjA0IjogIkFwcmlsIiwKICAgICAgICAiMDUiOiAiTWF5IiwKICAgICAgICAiMDYiOiAiSnVuZSIsCiAgICAgICAgIjA3IjogIkp1bHkiLAogICAgICAgICIwOCI6ICJBdWd1c3QiLAogICAgICAgIC8vIGZvciAoaT0wLCBpIDw9IHRvdGFsUGFnZVNldCwgaSsrKSB7CiAgICAgICAgLy8gICAgbGV0ICAKICAgICAgICAvL30KICAgICAgICAiMDkiOiAiU2VwdGVtYmVyIiwKICAgICAgICAiMTAiOiAiT2N0b2JlciIsCiAgICAgICAgIjExIjogIk5vdmVtYmVyIiwKICAgICAgICAiMTIiOiAiRGVjZW1iZXIiCiAgICAgIH07CiAgICAgIHZhciBkYXRlX2NvbXBvbmVudHMgPSBib3JuRGllZC5zcGxpdCgiLSIpOwogICAgICB2YXIgeWVhciA9IGRhdGVfY29tcG9uZW50c1swXTsKICAgICAgdmFyIG1vbnRoID0gbW9udGhzW2RhdGVfY29tcG9uZW50c1sxXV07CiAgICAgIHZhciBkYXkgPSBkYXRlX2NvbXBvbmVudHNbMl07CiAgICAgIHZhciBjdXJyZW50ID0gIiIuY29uY2F0KGRheSwgIiAiKS5jb25jYXQobW9udGgsICIgIikuY29uY2F0KHllYXIpOwogICAgICByZXR1cm4gY3VycmVudDsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBzb3J0ZWRBdXRob3JzOiBmdW5jdGlvbiBzb3J0ZWRBdXRob3JzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMuYXV0aG9yTGlzdC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgdmFyIG1vZGlmaWVyID0gMTsKICAgICAgICBpZiAoX3RoaXMuc29ydERpcmVjdGlvbiA9PT0gJ2Rlc2MnKSBtb2RpZmllciA9IC0xOwogICAgICAgIGlmIChhW190aGlzLnNvcnRLZXldIDwgYltfdGhpcy5zb3J0S2V5XSkgcmV0dXJuIC0xICogbW9kaWZpZXI7CiAgICAgICAgaWYgKGFbX3RoaXMuc29ydEtleV0gPiBiW190aGlzLnNvcnRLZXldKSByZXR1cm4gMSAqIG1vZGlmaWVyOwogICAgICAgIHJldHVybiAwOwogICAgICB9KTsKICAgIH0sCiAgICBwYWdlQ291bnQ6IGZ1bmN0aW9uIHBhZ2VDb3VudCgpIHsKICAgICAgdmFyIGxlbmd0aCA9IHRoaXMuc29ydGVkQXV0aG9ycy5sZW5ndGg7CiAgICAgIHJldHVybiB0aGlzLmNvdW50ID0gTWF0aC5jZWlsKGxlbmd0aCAvIHRoaXMucGFnZVNpemUpOwogICAgfSwKICAgIHBhZ2luYXRlZFRhYmxlOiBmdW5jdGlvbiBwYWdpbmF0ZWRUYWJsZSgpIHsKICAgICAgdmFyIHN0YXJ0ID0gdGhpcy5jdXJyZW50UGFnZSAqIHRoaXMucGFnZVNpemU7CiAgICAgIHZhciBlbmQgPSBzdGFydCArIHRoaXMucGFnZVNpemU7CiAgICAgIHZhciBwYWdpbmF0ZWQgPSB0aGlzLnNvcnRlZEF1dGhvcnMuc2xpY2Uoc3RhcnQsIGVuZCk7IC8vdGhpcy5wYWdpbmF0aW9uTGVuZ3RoID0gT2JqZWN0LmtleXMocGFnaW5hdGVkKQoKICAgICAgcmV0dXJuIHBhZ2luYXRlZDsKICAgIH0sCiAgICByZXN1bHRRdWVyeTogZnVuY3Rpb24gcmVzdWx0UXVlcnkoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuc2VhcmNoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc29ydGVkQXV0aG9ycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBfdGhpczIuc2VhcmNoLnRvTG93ZXJDYXNlKCkuc3BsaXQoJyAnKS5ldmVyeShmdW5jdGlvbiAodikgewogICAgICAgICAgICByZXR1cm4gaXRlbS5uYW1lLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModik7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy5wYWdpbmF0ZWRUYWJsZTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["AuthorTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,OAAA,kBAAA,MAAA,iCAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AACA;AACA,MAAA,QAAA,EAAA,EAFA;AAEA;AACA,MAAA,OAAA,EAAA,MAHA;AAIA,MAAA,aAAA,EAAA,KAJA;AAKA,MAAA,OAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,MAAA,CALA;AAMA,MAAA,OAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,WAAA,EAAA,CARA;AASA,MAAA,KAAA,EAAA;AATA,KAAA;AAWA,GAbA;AAcA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AADA,GAdA;AAiBA,EAAA,UAAA,EAAA;AACA,IAAA,qBAAA,EAAA;AADA,GAjBA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,YADA,EACA;AACA,UAAA,YAAA,KAAA,KAAA,OAAA,EAAA;AACA,aAAA,aAAA,GAAA,KAAA,aAAA,KAAA,KAAA,GAAA,MAAA,GAAA,KAAA;AACA;;AACA,WAAA,OAAA,GAAA,YAAA;AACA,KANA;AAOA,IAAA,oBAAA,EAAA,8BAAA,aAAA,EAAA;AACA;AACA;AACA,UAAA,aAAA,GAAA,EAAA;AACA,aAAA,aAAA,GAAA,aAAA,CAAA,KAAA,CAAA,IAAA,EAAA,OAAA,GAAA,IAAA,CAAA,GAAA,EAAA,OAAA,CAAA,OAAA,EAAA,GAAA,CAAA;AACA,KAZA;AAaA,IAAA,YAbA,0BAaA;AACA,UAAA,YAAA,GAAA,KAAA,SAAA;AACA,KAfA;AAgBA,IAAA,kBAhBA,8BAgBA,QAhBA,EAgBA;AACA,WAAA,WAAA,GAAA,QAAA;AACA;AAlBA,GApBA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,QAAA,EAAA;AACA,UAAA,QAAA,KAAA,EAAA,EAAA;AACA,UAAA,MAAA,GAAA;AACA,cAAA,SADA;AAEA,cAAA,UAFA;AAGA,cAAA,OAHA;AAIA,cAAA,OAJA;AAKA,cAAA,KALA;AAMA,cAAA,MANA;AAOA,cAAA,MAPA;AAQA,cAAA,QARA;AAQA;AACA;AACA;AACA,cAAA,WAXA;AAYA,cAAA,SAZA;AAaA,cAAA,UAbA;AAcA,cAAA;AAdA,OAAA;AAgBA,UAAA,eAAA,GAAA,QAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,UAAA,IAAA,GAAA,eAAA,CAAA,CAAA,CAAA;AACA,UAAA,KAAA,GAAA,MAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAAA;AACA,UAAA,GAAA,GAAA,eAAA,CAAA,CAAA,CAAA;AACA,UAAA,OAAA,aAAA,GAAA,cAAA,KAAA,cAAA,IAAA,CAAA;AACA,aAAA,OAAA;AACA;AAzBA,GAxCA;AAmEA,EAAA,QAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AACA,aAAA,KAAA,UAAA,CAAA,IAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AACA,YAAA,QAAA,GAAA,CAAA;AACA,YAAA,KAAA,CAAA,aAAA,KAAA,MAAA,EAAA,QAAA,GAAA,CAAA,CAAA;AACA,YAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,OAAA,CAAA,CAAA,GAAA,QAAA;AACA,YAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,OAAA,IAAA,QAAA;AACA,eAAA,CAAA;AACA,OANA,CAAA;AAOA,KATA;AAUA,IAAA,SAVA,uBAUA;AACA,UAAA,MAAA,GAAA,KAAA,aAAA,CAAA,MAAA;AACA,aAAA,KAAA,KAAA,GAAA,IAAA,CAAA,IAAA,CAAA,MAAA,GAAA,KAAA,QAAA,CAAA;AACA,KAbA;AAcA,IAAA,cAdA,4BAcA;AACA,UAAA,KAAA,GAAA,KAAA,WAAA,GAAA,KAAA,QAAA;AACA,UAAA,GAAA,GAAA,KAAA,GAAA,KAAA,QAAA;AACA,UAAA,SAAA,GAAA,KAAA,aAAA,CAAA,KAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAHA,CAIA;;AACA,aAAA,SAAA;AACA,KApBA;AAqBA,IAAA,WArBA,yBAqBA;AAAA;;AACA,UAAA,KAAA,MAAA,EAAA;AACA,eAAA,KAAA,aAAA,CAAA,MAAA,CAAA,UAAA,IAAA,EAAA;AACA,iBAAA,MAAA,CAAA,MAAA,CAAA,WAAA,GAAA,KAAA,CAAA,GAAA,EAAA,KAAA,CAAA,UAAA,CAAA;AAAA,mBAAA,IAAA,CAAA,IAAA,CAAA,WAAA,GAAA,QAAA,CAAA,CAAA,CAAA;AAAA,WAAA,CAAA;AACA,SAFA,CAAA;AAGA,OAJA,MAKA;AACA,eAAA,KAAA,cAAA;AACA;AACA;AA9BA;AAnEA,CAAA","sourcesContent":["<template>\n    <div>\n        <md-table>\n            <md-table-toolbar>\n                <div class=\"md-toolbar-section-start\">\n                    <div class=\"md-layout-item\">\n                    <md-field>\n                        <md-select v-model=\"pageSize\" name=\"pageSize\" id=\"pageSize\" placeholder=\"Number of rows\">\n                            <!-- <md-option value=\"10\">10</md-option> -->\n                            <md-option value=\"25\">25</md-option>\n                            <md-option value=\"50\">50</md-option>\n                            <md-option value=\"75\">75</md-option>\n                            <md-option value=\"100\">100</md-option>\n                        </md-select>\n                    </md-field>\n                    </div>\n                </div>\n                <md-field md-clearable class=\"md-toolbar-section-end\">\n                    <md-input placeholder=\"Search by name...\" v-model=\"search\" />\n                </md-field>\n            </md-table-toolbar> \n            <md-table-row>\n                <md-table-head\n                    v-for=\"(column, index) in columns\"\n                    :key=\"index\"\n                    >\n                    <span @click=\"sortBy(column)\">{{ column }}</span>\n                </md-table-head>\n            </md-table-row>\n            <md-table-row \n                v-for=\"author in resultQuery\"\n                :key=\"author._id\"\n                itemscope itemtype=\"http://schema.org/author\"\n            >\n                <md-table-cell><router-link :to=\"'/authors/' + lastFirstLastNameURL(author.name)\">{{ author.name }}</router-link></md-table-cell>\n                <md-table-cell>{{ author.born | dateFormat }}</md-table-cell>\n                <md-table-cell>{{ author.died | dateFormat}}</md-table-cell>\n            </md-table-row>\n            <app-pagination-switcher :paginationRange=\"count\" :pagePosition=\"currentPage\" @update=\"traversePagination\" />\n        </md-table>\n    </div>\n</template>\n\n<script>\nimport PaginationSwitcher from '@/components/PaginationSwitcher'\nexport default {\n    data() {\n        return {\n            search: '', //for table search\n            searched: [], //for table search\n            sortKey: 'name',\n            sortDirection: 'asc',\n            columns: ['name', 'born', 'died'],\n            theDate: '',\n            pageSize: 10,\n            currentPage: 1,\n            count: 1\n        }\n    },\n    props: {\n        authorList: Array\n    },\n    components: {\n        appPaginationSwitcher: PaginationSwitcher\n    },\n    methods: {\n        sortBy(sortCriteria) {\n            if (sortCriteria === this.sortKey) {\n                this.sortDirection = (this.sortDirection === 'asc') ? 'desc':'asc'\n            }\n            this.sortKey = sortCriteria\n        },\n        lastFirstLastNameURL: ( lastFirstName ) => {\n            //Make an SEO friendly URL.\n            //Reverse to first-surname order, and replace space and commas with underscores to be properly formatted URLs\n            let firstLastName = \"\"\n            return firstLastName = lastFirstName.split(\", \").reverse().join(\" \").replace(/[ ,]/g, \"_\")\n        },\n        pageSwitcher() {\n            const totalPageSet = this.pageCount\n        },    \n        traversePagination(traverse) {\n            this.currentPage = traverse\n        }  \n    },\n    filters: {\n       dateFormat: (bornDied) => {\n           if (bornDied === '') return\n            const months = {\n                \"01\": \"January\",\n                \"02\": \"February\",\n                \"03\": \"March\",\n                \"04\": \"April\",\n                \"05\": \"May\",\n                \"06\": \"June\",\n                \"07\": \"July\",\n                \"08\": \"August\",            // for (i=0, i <= totalPageSet, i++) {\n            //    let  \n            //}\n                \"09\": \"September\",\n                \"10\": \"October\",\n                \"11\": \"November\",\n                \"12\": \"December\"\n            };\n            const date_components = bornDied.split(\"-\");\n            const year = date_components[0];\n            const month = months[date_components[1]];\n            const day = date_components[2];\n            const current = `${day} ${month} ${year}`;\n            return current\n        }\n    },\n    computed: {\n        sortedAuthors() {\n            return this.authorList.sort( (a,b) => {\n                let modifier = 1;\n                if(this.sortDirection === 'desc') modifier = -1\n                if(a[this.sortKey] < b[this.sortKey]) return -1 * modifier\n                if(a[this.sortKey] > b[this.sortKey]) return 1 * modifier\n                return 0;\n            })\n        },\n        pageCount() {\n            const length = this.sortedAuthors.length\n            return this.count = Math.ceil(length/this.pageSize)\n        }, \n        paginatedTable() {\n            const start = this.currentPage * this.pageSize\n            const end = start + this.pageSize\n            const paginated = this.sortedAuthors.slice(start, end)\n            //this.paginationLength = Object.keys(paginated)\n            return paginated\n        },\n        resultQuery(){\n            if(this.search){\n                return this.sortedAuthors.filter((item)=>{\n                    return this.search.toLowerCase().split(' ').every(v => item.name.toLowerCase().includes(v))\n                })\n            }\n            else {\n                return this.paginatedTable;\n            }\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nth {\n    text-transform: capitalize;\n    cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components"}]}