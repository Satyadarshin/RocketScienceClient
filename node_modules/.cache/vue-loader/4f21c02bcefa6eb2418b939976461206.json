{"remainingRequest":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/satyadarshin/Documents/www/development/rocket-science/client/src/components/AuthorSpotlight.vue?vue&type=style&index=0&id=dcc994ee&lang=scss&scoped=true&","dependencies":[{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/src/components/AuthorSpotlight.vue","mtime":1598295505105},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXV0aG9yLXNwb3RsaWdodHsKCm1heC13aWR0aDogMzByZW0KfQo="},{"version":3,"sources":["AuthorSpotlight.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;;AAEA;AACA","file":"AuthorSpotlight.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div id=\"author-spotlight\" class=\"card-expansion\">\n        <md-card md-with-hover>\n            <md-card-media>\n                <img :src=\"imageAttributer('src', authorName )\" :alt=\"imageAttributer('alt', authorName )\"/>\n            </md-card-media>\n\n            <md-card-header>\n                <div class=\"md-title\">{{ cleanAuthorName(authorName) }}</div>\n                <div class=\"md-subhead\">Born &ndash; died?</div>\n            </md-card-header>\n\n            <md-card-expand>\n                <md-card-actions md-alignment=\"space-between\">\n                    <div>\n                        <md-button><a href=\"#\">Works</a></md-button>\n                        <md-button><a href=\"#\">Website</a></md-button>\n                    </div>\n\n                    <md-card-expand-trigger>\n                        <md-button class=\"md-icon-button\">\n                            <md-icon>keyboard_arrow_down</md-icon>\n                        </md-button>\n                    </md-card-expand-trigger>\n                </md-card-actions>\n\n                <md-card-expand-content>\n                    <md-card-content>\n                    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Optio itaque ea, nostrum odio. Dolores, sed accusantium quasi non, voluptas eius illo quas, saepe voluptate pariatur in deleniti minus sint. Excepturi.</p>\n                    </md-card-content>\n                </md-card-expand-content>\n            </md-card-expand>\n        </md-card>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    data() {\n        return {\n            imageSrc: `/assets/authors/`,\n            imageAlt: `Photograph of Science Fiction author`,\n        }\n    },\n    props: {\n        authorName: String\n    },\n    methods: {\n        findAuthor(name, authorRecords){\n            for (let i=0; i < authorRecords.length; i++) {\n                if (authorRecords[i].name === name) {\n                    return authorRecords[i];\n                }\n            }\n        },\n        imageAttributer(attribute, author) {\n            if (attribute === 'src') return `${this.imageSrc}${author}.jpg`\n            if (attribute === 'alt') return `${this.imageAlt} ${this.cleanAuthorName(author)}`\n        },\n        cleanAuthorName(webSafeName) {\n            return webSafeName.replace(/_/g, \" \")\n        }\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n#author-spotlight{\n\nmax-width: 30rem\n}\n</style>"]}]}