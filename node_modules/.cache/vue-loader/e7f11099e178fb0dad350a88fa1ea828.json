{"remainingRequest":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/satyadarshin/Documents/www/development/rocket-science/client/src/components/AwardTable.vue?vue&type=style&index=0&id=624085be&lang=scss&scoped=true&","dependencies":[{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/src/components/AwardTable.vue","mtime":1596568577109},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/satyadarshin/Documents/www/development/rocket-science/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp0YWJsZSB7CiAgICB0aCB7CiAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwogICAgfQp9Cg=="},{"version":3,"sources":["AwardTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA","file":"AwardTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"content\">\n        <md-table>\n            <md-table-toolbar>\n                <caption v-if=\"selectedAward.length === 0\">Choose an Award category, above</caption>\n                <caption v-else>Your selected award category is the <span>{{ who }}</span> for <span>{{ what }}</span></caption>\n            </md-table-toolbar> \n            <thead>\n                <!-- <tr class=\"filter\" v-if=\"selectedAward.length!== 0\">\n                    <th coslpan=\"\">     \n                        <input v-model=\"search\" class=\"form-control\" placeholder=\"Filter by year, author, or title\">\n                    </th>\n                </tr> -->\n                <md-table-row v-show=\"selectedAward.length >= 1\">\n                    <md-table-head\n                        v-for=\"(column, index) in columns\"\n                        :key=\"index\"\n                        >\n                        <span @click=\"sortBy(column)\">{{ column }}</span>\n                    </md-table-head>\n                </md-table-row>\n            </thead>\n            <tfoot>\n                <md-table-row>\n                    <md-table-cell>\n                       <md-button class=\"md-icon-button md-raised\">\n                            <md-icon>keyboard_arrow_left</md-icon>\n                        </md-button> \n                     </md-table-cell> \n                     <md-table-cell> \n                         1\n                     </md-table-cell>\n                    <md-table-cell>\n                        <md-button class=\"md-icon-button md-raised\">\n                            <md-icon>keyboard_arrow_right</md-icon>\n                        </md-button>\n                    </md-table-cell>\n                </md-table-row>\n            </tfoot>\n            <tbody>\n                <md-table-row\n                    v-for=\"(award, index) in sortedWinners\"\n                    :key=\"index\"\n                    itemscope itemtype=\"http://schema.org/Book\"\n                >\n                    <md-table-cell>{{ award.year }}</md-table-cell>\n                    <md-table-cell itemprop=\"creator\"><router-link :to=\"`/authors/${award.winner.author}`\">{{ award.winner.author }}</router-link></md-table-cell>\n                    <md-table-cell itemprop=\"name\">{{ award.winner.title }}</md-table-cell>\n                </md-table-row>\n            </tbody>\n        </md-table>\n    </div>\n</template>\n\n<script>\nexport default {\n    data: () => {\n        return {\n            search: '',\n            searched: [],\n            sortKey: 'year',\n            sortDirection: 'asc',\n            columns: ['year', 'author','title']\n        }\n    },\n    props: {\n        who: String,\n        what: String,\n        selectedAward: Array\n    },\n    methods: {\n        sortBy(sortCriteria) {\n            if (sortCriteria === this.sortKey) {\n                this.sortDirection = (this.sortDirection === 'asc') ? 'desc':'asc' \n            }\n            this.sortKey = sortCriteria\n        },\n        searchOnTable () {\n            this.searched = searchByName(this.users, this.search)\n      }\n    },\n    filters: {\n            lastFirstLastNameURL: ( lastFirstName ) => {\n            //Make an SEO friendly URL.\n            //Reverse to first-surname order, and replace space and commas with underscores to be properly formatted URLs\n            let firstLastName = \"\"\n            return firstLastName = lastFirstName.split(\", \").reverse().join(\" \").replace(/[ ,]/g, \"_\")\n        }\n    },\n    computed: {\n        sortedWinners() {\n            return this.selectedAward.sort((a,b) => {\n                let modifier = 1; \n                if(this.sortDirection === 'desc') modifier = -1;\n                if(a[this.sortKey] < b[this.sortKey]) return -1 * modifier;\n                if(a[this.sortKey] > b[this.sortKey]) return 1 * modifier;\n                return 0;\n            })\n        }\n    },\n    created () {\n        this.searched = this.sortedWinners\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\ntable {\n    th {\n        cursor: pointer;\n        text-transform: capitalize;\n    }\n}\n</style>"]}]}